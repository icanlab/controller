# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from swagger_server import util
from swagger_server.models.base_model_ import Model


class InputMsg(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, neid: str = None, source: str = None, module: str = None, data: str = None
    ):  # noqa: E501
        """InputMsg - a model defined in Swagger

        :param neid: The neid of this InputMsg.  # noqa: E501
        :type neid: str
        :param source: The source of this InputMsg.  # noqa: E501
        :type source: str
        :param module: The module of this InputMsg.  # noqa: E501
        :type module: str
        :param data: The data of this InputMsg.  # noqa: E501
        :type data: str
        """
        self.swagger_types = {"neid": str, "source": str, "module": str, "data": str}

        self.attribute_map = {
            "neid": "neid",
            "source": "source",
            "module": "module",
            "data": "data",
        }
        self._neid = neid
        self._source = source
        self._module = module
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> "InputMsg":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The input_msg of this InputMsg.  # noqa: E501
        :rtype: InputMsg
        """
        return util.deserialize_model(dikt, cls)

    @property
    def neid(self) -> str:
        """Gets the neid of this InputMsg.


        :return: The neid of this InputMsg.
        :rtype: str
        """
        return self._neid

    @neid.setter
    def neid(self, neid: str):
        """Sets the neid of this InputMsg.


        :param neid: The neid of this InputMsg.
        :type neid: str
        """

        self._neid = neid

    @property
    def source(self) -> str:
        """Gets the source of this InputMsg.


        :return: The source of this InputMsg.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this InputMsg.


        :param source: The source of this InputMsg.
        :type source: str
        """

        self._source = source

    @property
    def module(self) -> str:
        """Gets the module of this InputMsg.


        :return: The module of this InputMsg.
        :rtype: str
        """
        return self._module

    @module.setter
    def module(self, module: str):
        """Sets the module of this InputMsg.


        :param module: The module of this InputMsg.
        :type module: str
        """

        self._module = module

    @property
    def data(self) -> str:
        """Gets the data of this InputMsg.


        :return: The data of this InputMsg.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data: str):
        """Sets the data of this InputMsg.


        :param data: The data of this InputMsg.
        :type data: str
        """

        self._data = data
